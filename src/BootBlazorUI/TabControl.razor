
<ul class="nav @(GetTabsOrPills())" role="tablist">
    @for (int i = 0; i < Pages.Count; i++)
    {
        var page = Pages[i];
        <li class="nav-item">
            <a href="javascript:;" class="nav-link @GetActiveClass(page)" role="tab" @onclick="@(()=>ActivePage(page))">
            @(page.Title)
            </a>
        </li>
    }
</ul>

<div class="tab-content pt-2" style="@(BuildStyles())">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>
@code{

    /// <summary>
    /// 设置包含 <see cref="TabPage"/> 的标签页。
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    /// <summary>
    /// 表示启用页面。
    /// </summary>
    internal TabPage ActivedPage { get; set; }

    /// <summary>
    /// 获取所有的页面。
    /// </summary>
    List<TabPage> Pages { get; set; } = new List<TabPage>();

    /// <summary>
    /// 设置一个布尔值，表示标签页是否使用药丸样式。
    /// </summary>
    [Parameter]
    public bool Pills { get; set; }



    /// <summary>
    /// 设置标签页的固定高度。
    /// </summary>
    [Parameter]
    public string MinHeight { get; set; } = "100px;";

    /// <summary>
    /// 添加一个标签页面。
    /// </summary>
    /// <param name="page">要添加的标签页面。</param>
    internal void AddPage(TabPage page)
    {
        Pages.Add(page);
        if (Pages.Count == 1)
        {
            ActivedPage = page;
        }
        StateHasChanged();
    }

    string BuildStyles()
    {
        var styles = new List<string>();

        if (!string.IsNullOrWhiteSpace(MinHeight))
        {
            styles.Add($"min-height:{MinHeight}");
        }
        return string.Join(";", styles);
    }

    /// <summary>
    /// 获取启用样式。
    /// </summary>
    /// <param name="page"></param>
    /// <returns></returns>
    string GetActiveClass(TabPage page)
    {
        return ActivedPage == page ? "active" : string.Empty;
    }

    void ActivePage(TabPage page)
        => ActivedPage = page;

    string GetTabsOrPills()
        => Pills ? "nav-pills" : "nav-tabs";
}