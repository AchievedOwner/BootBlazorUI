@inherits BaseComponent

    <nav class="d-flex justify-content-center">
        <ul class="@GetCssClass()" @attributes="Attributes">
            @if (CurrentPage <= 1)
            {
                if (!HideOrDisable)
                {
                    if (ShowFirst)
                    {
                    <li class="page-item disabled"><span class="page-link">@FirstPageText</span></li>
                    }
                    <li class="page-item disabled"><span class="page-link">@PreviousPageText</span></li>
                }
            }
            else
            {
                if (ShowFirst)
                {
                <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToFirst">@FirstPageText</a></li>
                }
                <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToPrevious">@PreviousPageText</a></li>
            }

            @if (ShowPageNumber)
            {
                var pageNumberBound = ComputePageNumber();

                for (int i = pageNumberBound.start; i <= pageNumberBound.end; i++)
                {
                    int current = i;
                    @if (CurrentPage == current)
                    {
                        <li class="page-item active"><span class="page-link">@i</span></li>
                    }
                    else
                    {
                        <li class="page-item" @key="current"><a class="page-link" href="javascript:;" @onclick="@(() => NavigateToPage(current))">@current</a></li>
                    }
                }
            }

            @if (CurrentPage >= TotalPages)
            {
                if (!HideOrDisable)
                {
                        <li class="page-item disabled"><span class="page-link">@NextPageText</span></li>
                    if (ShowLast)
                    {
                        <li class="page-item disabled"><span class="page-link">@LastPageText</span></li>
                    }
                }
            }
            else
            {
                    <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToNext">@NextPageText</a></li>
                if (ShowLast)
                {
                    <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToLast">@LastPageText</a></li>
                }
            }



            @if (ShowStatusLabel)
            {
                <li class="page-item ml-3">
                    @if (StatusLabelTemplate == null)
                    {
                    <small> @(CurrentPage)/@(TotalPages) 页&nbsp;&nbsp;每页 @PageSize 条 &nbsp;&nbsp; 共计 @(TotalCount) 条数据</small>
                    }
                    else
                    {
                        @StatusLabelTemplate
                    }
                </li>
            }

            @if (ShowNavigateTo)
            {
                <li class="page-item ml-3">
                    @if (NavigateToTemplate == null)
                    {
                    <small>
                        <EditForm Model="model" class="form-inline">
                            <span>跳转到</span>
                            <InputText class="form-control form-control-sm text-center w-25" @bind-Value="model.NavigateTo" />
                            <BootButton Type="BootButton.ButtonType.Submit" Size="Size.SM" OnClick="GoToPage">Go</BootButton>
                        </EditForm>
                    </small>
                    }
                    else
                    {
                        @NavigateToTemplate
                    }
                </li>
            }
        </ul>
    </nav>
@code{
    NavigateToModel model = new NavigateToModel();
    class NavigateToModel {
        [System.ComponentModel.DataAnnotations.Required]
        public string NavigateTo { get; set; }
    }

    Task GoToPage()
    {
        if(!int.TryParse(model.NavigateTo,out int page))
        {
            page = 1;
        }

        if (page <= 1)
        {
            page = 1;
        }
        return NavigateToPage(page);
    }
}