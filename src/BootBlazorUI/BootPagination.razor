@inherits BootComponentBase


<section class="d-flex flex-row flex-fill @(ComponentUtil.GetFlexAlignCssClass(Alignment,"justify-content-")) align-items-center">
    <div class="d-flex flex-row align-items-center mr-1">
        <ul class="@BuildCssClassString()" @attributes="AdditionalAttributes" style="@BuildStylesString()">
            @if (CurrentPage <= 1)
            {
                if (!HideOrDisable)
                {
                    if (ShowFirst)
                    {
                        <li class="page-item disabled"><span class="page-link">@FirstPageText</span></li>
                    }
                    <li class="page-item disabled"><span class="page-link">@PreviousPageText</span></li>
                }
            }
            else
            {
                if (ShowFirst)
                {
                    <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToFirst">@FirstPageText</a></li>
                }
                <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToPrevious">@PreviousPageText</a></li>
            }

            @if (ShowPageNumber)
            {
                var pageNumberBound = ComputePageNumber();

                for (int i = pageNumberBound.start; i <= pageNumberBound.end; i++)
                {
                    int current = i;
                    @if (CurrentPage == current)
                    {
                        <li class="page-item active"><span class="page-link">@i</span></li>
                    }
                    else
                    {
                        <li class="page-item" @key="current"><a class="page-link" href="javascript:;" @onclick="@(() => NavigateToPage(current))">@current</a></li>
                    }
                }
            }

            @if (CurrentPage >= TotalPages)
            {
                if (!HideOrDisable)
                {
                    <li class="page-item disabled"><span class="page-link">@NextPageText</span></li>
                    if (ShowLast)
                    {
                        <li class="page-item disabled"><span class="page-link">@LastPageText</span></li>
                    }
                }
            }
            else
            {
                <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToNext">@NextPageText</a></li>
                if (ShowLast)
                {
                    <li class="page-item"><a class="page-link" href="javascript:;" @onclick="NavigateToLast">@LastPageText</a></li>
                }
            }
        </ul>
    </div>

        <div class="d-flex flex-row flex-row align-items-center ml-1">
            <ul class="list-inline d-flex flex-row align-items-center">
                <li class="list-inline-item">
                    @if (ShowPageSizeStakeholder)
                    {
                        <select class="form-control form-control-sm d-inline" style="min-width:100px" @onchange="e => SelectPageSize(e.Value.ToString())">
                            @foreach (var item in PageSizeStakeholders)
                            {
                                <option value="@item" selected="@(PageSize == item)">@(item) /页</option>
                            }
                        </select>
                    }
                    else
                    {
                        @PageSize
                    }
                </li>
                @if (ShowTotalCount)
                {
                    <li class="list-inline-item">
                        共 @(TotalCount) 条
                    </li>
                }


                @if (ShowNavigateTo)
                {
                    <EditForm Model="model" class="form-inline">
                        <li class="list-inline-item">
                            <div class="input-group input-group-sm">
                                <BootInputText Placeholder="跳转到" class="text-center" Styles="width:80px" @bind-Value="model.NavigateTo" />
                                <div class="input-group-append">
                                    <BootButton Type="BootButton.ButtonType.Submit" OnClick="GoToPage">
                                        <OnSubmitTemplate>
                                            <BootSpinner Size="Size.SM" />
                                        </OnSubmitTemplate>
                                        <NonSubmitTemplate>
                                            GO
                                        </NonSubmitTemplate>
                                    </BootButton>
                                </div>
                            </div>
                        </li>
                    </EditForm>
                }
            </ul>
        </div>
</section>
@code{
    NavigateToModel model = new NavigateToModel();
    class NavigateToModel
    {
        [System.ComponentModel.DataAnnotations.Required]
        public string NavigateTo { get; set; }
    }

    Task GoToPage()
    {
        if (!int.TryParse(model.NavigateTo, out int page))
        {
            page = 1;
        }

        if (page <= 1)
        {
            page = 1;
        }
        return NavigateToPage(page);
    }
}